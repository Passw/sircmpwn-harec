#!/bin/sh
all="$all tests"

tests() {
	# Temporary test suite
	for t in \
		900-basics \
		901-primitives \
		902-arithm \
		903-postfix \
		904-copy \
		905-assign \
		906-if \
		907-casts \
		908-loops \
		909-defer \
		910-tagged \
		911-slices \
		912-enums \
		913-match \
		914-switch
	do
		cat <<EOF
tests/$t: harec tests/$t.ha tests/rt.o
	@printf 'HARECC\t%s\t$@\n' "tests/$t"
	@HARECACHE=\$(HARECACHE) ./harec -o tests/$t.ssa tests/$t.ha
	@\$(QBE) -o tests/$t.s tests/$t.ssa
	@\$(CC) -g -o tests/$t tests/$t.s tests/rt.c tests/rt.o

check: tests/$t

clean-test-$t:
	@rm -f tests/$t
.PHONY: clean-test-$t

clean-tests: clean-test-$t
EOF
	done

	# Hare tests
	for t in \
		00-constants \
		01-arrays \
		02-integers \
		03-pointers \
		04-strings \
		05-implicit-casts \
		06-structs \
		07-aliases \
		09-funcs \
		10-binarithms \
		11-globals \
		14-switch \
		17-alloc \
		20-if \
		24-imports \
		26-gen \
		27-rt \
		29-unarithm

	# Disabled tests
		#08-slices \
		#12-loops \
		#13-tagged \
		#15-enums \
		#16-defer \
		#17-alloc \
		#18-match \
		#19-append \
		#21-tuples \
		#22-delete \
		#23-errors \
		#25-promotion \
		#28-insert \
	do
		cat <<EOF
tests/$t: libhart.a tests/$t.ha
	@printf 'HAREC\t%s\t$@\n' "tests/$t"
	@HARECACHE=\$(HARECACHE) ./harec -o tests/$t.ssa tests/$t.ha
	@\$(QBE) -o tests/$t.s tests/$t.ssa
	@\$(AS) -o tests/$t.o tests/$t.s
	@\$(LD) --gc-sections -T rt/hare.sc -o tests/$t $rtstart tests/$t.o libhart.a
	@rm tests/$t.s tests/$t.ssa tests/$t.o

check: tests/$t

clean-test-$t:
	@rm -f tests/$t
.PHONY: clean-test-$t

clean-tests: clean-test-$t
EOF
	done

	# C tests
	for t in \
		30-reduction
	do
		cat <<EOF
test_objects=\
	src/lex.o \
	src/parse.o \
	src/type_store.o \
	src/scope.o \
	src/identifier.o \
	src/util.o \
	src/types.o \
	src/check.o \
	src/utf8.o \
	src/eval.o \
	src/typedef.o \
	src/mod.o

tests/$t: tests/$t.c \$(test_objects)
	@printf 'CC\ttests/$t\n'
	@\$(CC) \$(LDFLAGS) \$(CFLAGS) -o \$@ tests/$t.c \$(test_objects) \$(LIBS)

check: tests/$t

clean-test-$t:
	@rm -f tests/$t tests/$t.o
.PHONY: clean-test-$t

clean-tests: clean-test-$t
EOF
	done
}
